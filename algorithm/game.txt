Game class:
    attributes:
        screen, foundation, free cells, tableau, deck, held_card, running
    
    create_game:
        game.create_screen
        game.create_foundation
        game.create_free_cells
        game.create_tabluau
        set cards to a deck
        game.add_cards
        held_card is None


    @property
    spaces:
        return all spaces on the game board.

    check_destination
        for space in spaces:
            dest is space.valid_dest(held_card):
            if dest:
                return dest

    create_foundation
        create foundation spaces in upper left
        create region for foundation

    create_free_cells
        create free cells in upper right
        create region for free cells

    create_tableau
        create 8 tableau columns
        create tableau region at lower portion of screen
    
    deal_cards:
        shuffle deck
        start at first tableau
        for card in deck:
            tableau.stack_card(card)
            card.go_home
            if not last tab:
                move to next tab
            else:
                go back to first tab
    
    draw:
        for each space:
            space.draw
        if held_card:
            held_card.draw

    get_mouse_target:
        Check each region to see if mouse is in it.
            if mouse in region:
                for space in region:
                    space.check_for_target
                    if target is card:
                        return target

    handle_events:
        get events
        for event in events:
            game.handle_event
    
    handle_event(event):
        if event is quit event:
            game.running = false
        elif event is mouse down:
            game.handle_mouse_down
        elif event is mouse up:
            game.handle_mouse_up
    
    handle_mouse_down:
        game.get_mouse_target
        if target:
***
            if target is card and card.is_valid_stack:
***
                held_card = card
                target.click(cursor position)
    
    handle_mouse_up:
        if held_card:
            held_card.release(self.spaces)
            set self.held_card to None

    run:
        while game.running:
            game.tick
    
    tick:
        game.draw
        game.handle_events
        game.update

    update:
        if held_card:
            *card.drag to mouse location*

    